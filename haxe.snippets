snippet pack "Package"
package `!v expand('%:h:t')`;$0
endsnippet

snippet class "Class"
class `!v expand('%:t:r')`${1: extends ParentClass}
{
	public function new($2)
	{
		${3:super();}$0
	}
}
endsnippet

snippet var "Variable"
${1:public }var ${2:name}${3::Type}${4: =};$0
endsnippet

snippet prop "Property"
public var ${1:name}(${2:get},${3:set}):${4:Type};$0
endsnippet

snippet get "Getter"
private function get_${1:name}():${2:Type}
{
	return $3;
}$0
endsnippet

snippet sv "Static var"
${1:public} static var ${2:name}:${3:Type} = $4;$0
endsnippet

snippet siv "Static inline var"
${1:public} static inline var ${2:NAME}:${3:Type} = $4;$0
endsnippet

snippet func "Function"
${1:public} function ${2:name}($3)${4::Type}
{
	$5
}$0
endsnippet

snippet sfunc "Static function"
${1:public} static function ${2:name}($3)${4::Type}
{
	$5
}$0
endsnippet

snippet if "If"
if ($1)
{
	$2
}$0
endsnippet

snippet else "Else"
else
{
	$1
}$0
endsnippet

snippet elsei "Else-if"
else if ($1)
{
	$2
}$0
endsnippet

snippet for "For"
for ($1 in $2)
{
	$3
}$0
endsnippet

snippet switch "Switch"
switch ($1)
{
	$2
}$0
endsnippet

snippet typed "Typedef"
${1:public }typedef ${2:Type} = {
	$3
}$0
endsnippet

snippet enum "Enum"
${1:public }enum ${2:Type}
{
	$3
}$0
endsnippet
