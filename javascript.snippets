priority 1

snippet ${ "Interpolation" i
\$\{$1\}
endsnippet

snippet for "For"
for (${1:var i = 0}; ${2:i < 10}; ${3:i++}) {
	$4
}$0
endsnippet

snippet if "If"
if ($1) {
	${2:${VISUAL}}
}$0
endsnippet

snippet else "Else"
else {
	${1:${VISUAL}}
}$0
endsnippet

snippet self "Self executing function"
(function ($1) {
	${2:${VISUAL}}
})($1);$0
endsnippet

snippet => "ES6 function" i
($1) => {
	${3:${VISUAL}}
}$0
endsnippet

snippet fun "Function" i
function $1($2) {
	${3:${VISUAL}}
}$0
endsnippet

snippet proto "Prototype"
${1:Class}.prototype.${2:function} = function ($3) {
	${4:${VISUAL}}
};$0
endsnippet

snippet super "Initialize parent class"
${1:Class}.prototype = new ${2:ParentClass}();$0
endsnippet

snippet apply "Apply method"
${1:Class}.apply(this, Array.prototype.slice.call(arguments));$0
endsnippet

snippet call "Call method"
${1:Class}.prototype.${2:method}.call(this${3:, args});$0
endsnippet

snippet ={ "Object"
= {
	${1:${VISUAL}}
};$0
endsnippet

snippet =[ "List"
= [
	${1:${VISUAL}}
];$0
endsnippet

snippet Promise "Promise"
Promise((resolve, reject) => {
	${1:${VISUAL}}
});$0
endsnippet

snippet strict "Strict statement"
'use strict';
endsnippet

snippet req "Require statement"
require('${1:module}')$2;$0
endsnippet

snippet :{ "Nested object" i
: {
	${1:${VISUAL}}
}$0
endsnippet

snippet : "Object entry" i
${1:name}: ${2:value}
endsnippet
